def solution(nums):

    answer = len(set(nums))

    if answer > len(nums)/2:
        return len(nums)/2

    return answer

'''
# 유형
<< N개의 아이템 중 K개를 고를 때 최대 종류의 개수를 구하기 >>

# 문제요구사항
- 최대 N/2마리의 폰켓몬 중 선택 가능한 가장 다양한 "종류의 수"

# 접근
- 최대 선택 가능한 폰켓몬 종류의 수: N/2 (모두 다 다른 종류일 때)
  -> len(nums/2)
- 실제 폰켓몬 종류 수: 배열 nums의 "고유 원소 개수" (실제로 존재하는 종류의 수)
  -> len(set(nums))
- 이 때, 최대로 선택할 수 있는 종류의 수는 두 값 중 작은 값
  
# 문제풀이
- nums의 고유 종류를 찾기 위해 집합(Set)으로 변환
- 집합 크기와 N/2 중 작은 값을 반환

************************** 핵심 **************************
가장 "다양한 종류"의 개수를 찾는 게 목표 => 종류별 개수를 관리할 필요 X
---------------------------------------------------------------

- 원하는 것이 가장 "다양한" 종류의 수 => "일단 존재하는 모든 종류를 1개씩 선택"하고 모자라는 걸 중복으로 채움

- 가능한 한 많은 종류의 수 = 존재하는 모든 종류의 수 = 고유 원소의 수
  (그래서 원소별 개수는 중요하지 않음. 
   가장 다양하게 선택해야하기 때문에 가장 적은 개수의 종류부터 '차례대로 채워나가는 게 아님'.
   nums=[1,2,2,3,3,3]인 경우라도 1인 폰켓몬 전부 선택하고 2인 폰켓몬 전부 선택하며 채워나가는 [1,2,2] 게 아니라 각 종류는 최대한 1개씩만 선택하려고[1,2,3] 하기 때문.)
   
   => 존재하는 모든 종류를 1개씩 모두 선택하며 일단 N/2개를 채우고(N/2), 부족하면(고유원소의 수<N/2이면) 이미 선택한 종류를 또 선택하는 것(이미 선택했기 때문에 최대종류 개수인 answer에 영향 X).

- 어차피 N/2를 초과하는 종류를 선택할 수 없으므로, 고유 종류 수와 N/2 중 더 작은 값이 답

**********************************************************
'''