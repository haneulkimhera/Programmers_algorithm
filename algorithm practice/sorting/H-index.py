def solution(citations):
    citations = sorted(citations, reverse=True)
    print(citations)

    for i in range(len(citations)):
        if i+1>citations[i]:
            return i

solution([1, 11, 111, 1111])

'''
# 유형
정렬

# 문제요구사항
h번 이상 인용된 논문이 h편 이상이고, 나머지 논문들은 h번 이하로 "인용된 값 중 최댓값"

# 접근
- h = n번 이상 인용된 논문이 n편 이상인 n의 최댓값 -> n번 이상 인용된 논문의 개수가 인용횟수 n보다 많으면 h가 될 수 없음
  => 높은 순위부터 현재까지의 논문개수와 인용횟수를 비교하다가 인용횟수가 누적횟수보다 작아지는 순간 h가 될 수 없음.
  (ex.[9,9,5,4,3,1,0]이면,
   인용횟수   9 9 5 4 3 1 0
   순위(개수) 1 2 3 4 5 6 7
   즉 4번 논문까지는 4번 이상 인용된 논문 4개이지만, 3번이상 인용된 논문은 5개가 되므로)

# 문제풀이
- 인용횟수 기준 내림차순으로 정렬
- for문에서 인용횟수와 논문순위(개수)를 비교하다가 인용횟수가 이때까지 센 논문보다 작아지는 순간 return
- h값은 결국 논문이 h편 이상이어야하므로 논문의 개수가 기준. 인용횟수는 실제 h에 해당하는 논문개수보다 클 수도 있지만 그게 h값이 될 수는 없음(ex.[7,7]->h:2)

************************** 핵심 **************************

**********************************************************

!!!!!!!!!!!!!!!!!!!!!!!!!! 주의 !!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
'''